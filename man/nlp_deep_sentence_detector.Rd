% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/deep-sentence-detector.R
\name{nlp_deep_sentence_detector}
\alias{nlp_deep_sentence_detector}
\title{Spark NLP DeepSentenceDetector}
\usage{
nlp_deep_sentence_detector(
  x,
  input_cols,
  output_col,
  include_pragmatic_segmenter = NULL,
  end_punctuation = NULL,
  custom_bounds = NULL,
  explode_sentences = NULL,
  max_length = NULL,
  use_abbreviations = NULL,
  use_custom_only = NULL,
  uid = random_string("deep_sentence_detector_")
)
}
\arguments{
\item{x}{A \code{spark_connection}, \code{ml_pipeline}, or a \code{tbl_spark}.}

\item{input_cols}{Input columns. String array.}

\item{output_col}{Output column. String.}

\item{include_pragmatic_segmenter}{Whether to include rule-based sentence detector as first filter. Defaults to false.}

\item{end_punctuation}{An array of symbols that deep sentence detector will consider as an end of sentence punctuation. Defaults to “.”, “!”, “?”}

\item{custom_bounds}{}

\item{explode_sentences}{}

\item{max_length}{}

\item{use_abbreviations}{}

\item{use_custom_only}{}

\item{uid}{A character string used to uniquely identify the ML estimator.}

\item{...}{Optional arguments, see Details.}
}
\value{
The object returned depends on the class of \code{x}.

\itemize{
\item \code{spark_connection}: When \code{x} is a \code{spark_connection}, the function returns an instance of a \code{ml_estimator} object. The object contains a pointer to
a Spark \code{Estimator} object and can be used to compose
\code{Pipeline} objects.

\item \code{ml_pipeline}: When \code{x} is a \code{ml_pipeline}, the function returns a \code{ml_pipeline} with
the NLP estimator appended to the pipeline.

\item \code{tbl_spark}: When \code{x} is a \code{tbl_spark}, an estimator is constructed then
immediately fit with the input \code{tbl_spark}, returning an NLP model.
}
}
\description{
Spark ML transformer that finds sentence bounds in raw text. Applies a Named Entity Recognition DL model.
See \url{https://nlp.johnsnowlabs.com/docs/en/annotators#deepsentencedetector}
}
